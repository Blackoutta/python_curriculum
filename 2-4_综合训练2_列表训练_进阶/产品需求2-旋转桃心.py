在列表中嵌套列表，就会生成一个二维列表
我们可以用 grid[y][x] 这样的索引来提取二维表中的字符，如：
grid[1][1] 会返回字符串 'o'


# TODO: 老师提供以下二维列表，它是一个侧躺着的桃心符号
grid = [['.', '.', '.', '.', '.', '.'],
        ['.', 'o', 'o', '.', '.', '.'],
        ['o', 'o', 'o', 'o', '.', '.'],
        ['o', 'o', 'o', 'o', 'o', '.'],
        ['.', 'o', 'o', 'o', 'o', 'o'],
        ['o', 'o', 'o', 'o', 'o', '.'],
        ['o', 'o', 'o', 'o', '.', '.'],
        ['.', 'o', 'o', '.', '.', '.'],
        ['.', '.', '.', '.', '.', '.']]

# TODO: 创建一个新文件 ex2.py
# TODO: 写一个脚本，让这个桃心向右旋转90°
# TODO: 基本思路：
        # 使用两个 for loop, 一个嵌套在另一个之中
        # 想办法让脚本依次打印 grid[0][0], grid[1][0], grid[2][0], grid[3][0]...直到 grid[8][0]。
        # 随后换行打印 grid[0][1], grid[1][1], grid[2][1], grid[3][1]...直到 grid[8][1]。
        # 随后换行打印 grid[0][2], grid[1][2], grid[2][2], grid[3][1]...直到 grid[8][2]。
        # ....以此类推

你可能会用到：
    1. for loop嵌套，配合range()，如:

    for x in range(6):
        # 外循环会将内循环运行6次
        for y in range(8):
            print("内循环中的语句会运行8次")


    2. 如果想让一系列打印不换行，记得使用 print() 中的 end = '' 参数，如：
        # 可以在REPL中实验一下这些语句
        print("不换行", end = '')
        print("还是不换行", end = '')
        print("换行", end = '\n')

    3. if, else
