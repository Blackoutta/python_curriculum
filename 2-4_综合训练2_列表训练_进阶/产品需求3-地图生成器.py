如果你想在python中画一个3x3的棋盘，你会先用二维表来确定棋盘的坐标，如：
BOARD = [
        [0,0], [1,0], [2,0],
        [0,1], [1,1], [2,1],
        [0,2], [1,2], [2,2]
        ]

# 然后使用以下语句来画出格子
print(" _" * 3)
tile = "|{}"
for slot in BOARD:
    x, y = slot
    if x < 3:
        print(tile.foramt("_"), end = '')
    else:
        print(tile.format("_|"), end = '\n')

这种由程序员自己一个坐标一个坐标制定二维表的行为被称之为 硬编码(hard code)
格子数量不多的时候，硬编码比较方便快速。
但是如果现在我们想要更多的格子呢，比如 10x10, 20x20, 30x30呢？

--------------------------------------------------------------------------------
# TODO: 创建新文件 ex3.py
# TODO: 用两个input()分别询问用户想要绘制的 列数 以及 行数，别忘了堵住用户潜在的误操作
# TODO: 写一个函数，传递两个整数参数：列数 和 行数
# TODO: 一旦函数被调用，就可以根据用户传递的 列数 和 行数 生成相应的二维表，如：
    create_2d_list(3,3) # 3列 3行
    # 返回
    [
    [0,0], [1,0], [2,0],
    [0,1], [1,1], [2,1],
    [0,2], [1,2], [2,2]
    ]

    create_2d_list(5,2) # 5列 2行
    # 返回
    [
    [0,0], [1,0], [2,0], [3,0], [4,0],
    [0,1], [1,1], [2,1], [3,1], [4,1]
    ]

# TODO: 二维表生成完成之后，再写一个函数，传递三个参数： 列数，行数，二维表
# TODO: 函数被调用时，会根据刚才的二维表画出相应的地图
# TODO: 具体效果请看教师脚本演示

--------------------------------------------------------------------------------
你可能会用到：
    1. 在 while loop 中嵌套 for loop, 如:
        while y < row:
            for x in range(column):

    2. list.append()
